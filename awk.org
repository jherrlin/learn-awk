#+STARTUP: content

* Drills
** Local variables                                                :awk:drill:

   How to declair local variables in a function?

*** Answer

    Local variables are declaired in the function arguments.

   #+BEGIN_SRC awk :results output code
     function f(      i){
         for (i = 0; i < 3; i++)
             print "bar's i=" i
     }
     function g(      i) { print i }
     END { f(); g() }
   #+END_SRC

** Current filename                                               :awk:drill:

   How do you get the current file name?

   :in-file ./text-files/access.log

*** Answer

    #+BEGIN_SRC awk :results output code :in-file ./text-files/access.log
      END { print FILENAME }
    #+END_SRC

** Current file row number                                        :awk:drill:

   How to get the current file row number?

   :in-file ./text-files/access.log

*** Answer

    #+BEGIN_SRC awk :results output code :in-file ./text-files/access.log
      { print FNR }
    #+END_SRC

** Number of fields in record                                     :awk:drill:

   How to get the number of fields in the current record?

   :in-file ./text-files/access.log

*** Answer

    NF is the variable.

    Example; print number of fields on each record.

    #+BEGIN_SRC awk :results output code :in-file ./text-files/access.log
      { print NF }
    #+END_SRC

** Read records variable                                          :awk:drill:

   What is the internal variable used to tell how many records have been read?

   :in-file ./text-files/access.log

*** Answer

    #+BEGIN_SRC awk :results output code :in-file ./text-files/access.log
      { print NR }
    #+END_SRC

** Empty line pattern                                             :awk:drill:

   How to skip empty lines?

   :in-file ./text-files/ledger.ledger

*** Answer

    #+BEGIN_SRC awk :results output code :in-file ./text-files/ledger.ledger
      NF
    #+END_SRC

** Print line 7 to 10 of file                                     :awk:drill:

   How do you print line 7 to 10 with a range pattern?

   :in-file ./text-files/ledger.ledger

*** Answer

    #+BEGIN_SRC awk :results output code :in-file ./text-files/ledger.ledger
      FNR==7,FNR==10
    #+END_SRC

    #+RESULTS:
    #+begin_src awk
    2020-04-17 * Dustin. KÃ¶p av tangentbord.
        ;; ~/company/incomming-invoices/2020/2020-04-17-lenovo-keyboard-swedbank-transaction.pdf
        2:4:4:0                                   667.00 SEK
        2:0:1:8                                  -667.00 SEK
    #+end_src

** Skip lines starting with number                                :awk:drill:

   How do you skip a line that starts with a number?

   :in-file ./text-files/ledger.ledger

*** Answer

    #+BEGIN_SRC awk :results output code :in-file ./text-files/ledger.ledger
      $0 ~ /^[^0-9]/
    #+END_SRC

** How many requests have each IP address done                    :awk:drill:

   Count the number of requests that each unique IP address have done.

   :in-file ./text-files/access.log

*** Answer

    The answer also contains some sorting.

    #+BEGIN_SRC awk :results output code :in-file ./text-files/access.log
      { counts[$1]++ }
      END { for (c in counts) { print c, counts[c] | "sort -r -k 2,2" }}
    #+END_SRC

** For loop                                                       :awk:drill:

   Write a for loop that print value 1 to 10

*** Answer

    #+BEGIN_SRC awk :results output code
      END { for (i=1; i <= 10; i++) { print i }}
    #+END_SRC

** The Structure of an AWK Program                                :awk:drill:

   Name the two most basic parts of an awk program.

*** Answer

    #+BEGIN_SRC awk :results output code
      pattern { action }
    #+END_SRC

** First fields equals to                                         :awk:drill:

   How to filter rows where first field is "129.204.106.181"?

   :in-file ./text-files/access.log

*** Answer

    #+BEGIN_SRC awk :results output code :in-file ./text-files/access.log
      $1=="129.204.106.181"
    #+END_SRC

** Replace : with |                                               :awk:drill:

   How do you replace all : with | in passwd file

   :in-file ./text-files/passwd

*** Answer

    #+BEGIN_SRC awk :results output code :in-file ./text-files/passwd
      BEGIN {FS=":"; OFS="|"}
            { print $1, $2, $3, $4, $5, $6, $7}
    #+END_SRC

** Zero or more regex                                             :awk:drill:

   What is the regex symbol for zero or more?

*** Answer

    #+BEGIN_SRC awk :results output code
      *
    #+END_SRC

** One or more regex                                              :awk:drill:

   What is the regex symbol for one or more?

*** Answer

    #+BEGIN_SRC awk :results output code
      +
    #+END_SRC

** Zero or one regex                                              :awk:drill:

   What is the regex symbol for zero or one?

*** Answer

    #+BEGIN_SRC awk :results output code
      ?
    #+END_SRC

** Beginning of line regex                                        :awk:drill:

   What is the regex symbol for beginning of line?

*** Answer

    #+BEGIN_SRC awk :results output code
      ^
    #+END_SRC

** End of line regex                                              :awk:drill:

   What is the regex symbol for end of line?

*** Answer

    #+BEGIN_SRC awk :results output code
      $
    #+END_SRC
** Comments                                                       :awk:drill:

   How do you declair comments?

*** Answer

    #+BEGIN_SRC awk :results output code :in-file ./text-files/access.log
      # This line is a comments
      { print }   # From here to end of line is a comment
    #+END_SRC
** Trim                                                           :awk:drill:

   Write a trim function that removes prefix and tailing whitespaces from $0.
   =trim= should be a function that takes one argument and return a new string.
   The substtuted string should then be printed.

*** Answer

    #+BEGIN_SRC awk :results output code :in-file ./text-files/ledger.ledger
      function trim(s){ gsub(/^[ \t]+|[ \t]+$/, "", s); return s }
      { print trim($0) }
    #+END_SRC

** First position                                                 :awk:drill:

   What is the first position number in vectors and strings?

*** Answer

    AWK is differente from anthor languages in the sensa that collections and
    string start with position 1 and not 0 as in many other languages.

    #+BEGIN_SRC awk :results output code
      1
    #+END_SRC

    Here is a showcase.

    #+BEGIN_SRC awk :results output code
      BEGIN { print index("abcdef", "a")}
    #+END_SRC

    #+RESULTS:
    #+begin_src awk
    1
    #+end_src

** Substring                                                      :awk:drill:

   How to print "abc" in string "abcdef" using =substr=.

*** Answer

    #+BEGIN_SRC awk :results output code
      BEGIN { print substr("abcdef", 1, 3) }
    #+END_SRC

    #+RESULTS:
    #+begin_src awk
    abc
    #+end_src

** Sum population in Europe                                       :awk:drill:

   Sum the population in Europe. Population is in field $3.

   :in-file ./text-files/countries.txt

*** Answer

    #+BEGIN_SRC awk :results output code :in-file ./text-files/countries.txt
      $4 ~ /Europe/ { sum+= $3 }
      END { print "Population in Europe is", sum}
    #+END_SRC

    #+RESULTS:
    #+begin_src awk
    Population in Europe is 172
    #+end_src
** Multiple occurences                                            :awk:drill:

   How do you get the SECOND certificate?

   :in-file ./text-files/certificates

*** Answer

    #+BEGIN_SRC awk :results output code :in-file ./text-files/certificates
      /BEGIN CERTIFICATE/ && ++c==2,/END CERTIFICATE/
    #+END_SRC

    #+RESULTS:
    #+begin_src awk
    -----BEGIN CERTIFICATE-----
    cert BBBBBBBBBBBBBBBB cert
    -----END CERTIFICATE-----
    #+end_src

** Multiple occurences 2                                          :awk:drill:

   How do you get the SECOND and THIRD certificate?

   :in-file ./text-files/certificates

*** Answer

    #+BEGIN_SRC awk :results output code :in-file ./text-files/certificates
      /BEGIN CERTIFICATE/ && (++c==2 || c==3),/END CERTIFICATE/
    #+END_SRC

    #+RESULTS:
    #+begin_src awk
    -----BEGIN CERTIFICATE-----
    cert BBBBBBBBBBBBBBBB cert
    -----END CERTIFICATE-----
    -----BEGIN CERTIFICATE-----
    cert CCCCCCCCCCCCCCCC cert
    -----END CERTIFICATE-----
    #+end_src

** Ranges                                                         :awk:drill:

   Print only the parameters to the Java commands and nothing more.

   :in-file ./text-files/text.yml

*** Answer

    #+BEGIN_SRC awk :results output code :in-file ./text-files/text.yml
      $0 ~ /.*-\sjava/,$0 ~ /.*config/
    #+END_SRC

    #+RESULTS:
    #+begin_src awk
          - java
          - -Xmx1000m
          - -Xss256k
          - -XX:MaxMetaspaceSize=100m
          - -XX:MaxDirectMemorySize=800m
          - -XX:CompressedClassSpaceSize=20m
          - -XX:ReservedCodeCacheSize=20m
          - -XX:OnOutOfMemoryError=echo jvm-oom-selfkill; kill 1;
          - -XX:MinHeapFreeRatio=50
          - -XX:MaxHeapFreeRatio=50
          - -XX:+HeapDumpOnOutOfMemoryError
          - -XX:-ShrinkHeapInSteps
          - -XX:MaxGCPauseMillis=10
          - -Dio.netty.allocator.numHeapArenas=2
          - -Dio.netty.allocator.numDirectArenas=2
          - -jar
          - app.jar
          - db-migrate-run
          - config.yml
    #+end_src

    #+BEGIN_SRC awk :results output code :in-file ./text-files/text.yml
      $0 ~ /command:/,$1 ~ /^[a-z]/ && ++c==2
    #+END_SRC

    #+RESULTS:
    #+begin_src awk
        command:
          - java
          - -Xmx1000m
          - -Xss256k
          - -XX:MaxMetaspaceSize=100m
          - -XX:MaxDirectMemorySize=800m
          - -XX:CompressedClassSpaceSize=20m
          - -XX:ReservedCodeCacheSize=20m
          - -XX:OnOutOfMemoryError=echo jvm-oom-selfkill; kill 1;
          - -XX:MinHeapFreeRatio=50
          - -XX:MaxHeapFreeRatio=50
          - -XX:+HeapDumpOnOutOfMemoryError
          - -XX:-ShrinkHeapInSteps
          - -XX:MaxGCPauseMillis=10
          - -Dio.netty.allocator.numHeapArenas=2
          - -Dio.netty.allocator.numDirectArenas=2
          - -jar
          - app.jar
          - db-migrate-run
          - config.yml
        readinessProbe:
    #+end_src

** Field separator                                                :awk:drill:

   How do you change the field separator when invoking =awk=?

*** Answer

    #+BEGIN_SRC shell
      awk -F',' '{ print $1 }'
    #+END_SRC
